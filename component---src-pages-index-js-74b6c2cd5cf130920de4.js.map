{"version":3,"sources":["webpack:///./src/components/Footer.js","webpack:///./src/pages/index.js"],"names":["Footer","render","style","marginTop","rhythm","paddingTop","href","target","rel","React","Component","BlogIndex","siteTitle","get","this","posts","location","props","title","SEO","Bio","map","node","fields","slug","key","marginBottom","boxShadow","to","frontmatter","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","spoiler","pageQuery"],"mappings":"kQAyCeA,E,kGApCbC,OAAA,WACE,OACE,4BACEC,MAAO,CACLC,UAAWC,YAAO,KAClBC,WAAYD,YAAO,KAGrB,uBACEE,KAAK,iCACLC,OAAO,SACPC,IAAI,uBAHN,WAMK,IAZP,IAaS,IACP,uBACEF,KAAK,4BACLC,OAAO,SACPC,IAAI,uBAHN,UAMK,IApBP,IAqBS,IACP,uBACEF,KAAK,wDACLC,OAAO,SACPC,IAAI,uBAHN,YAMK,M,GA/BQC,IAAMC,W,YCOrBC,E,kGACJV,OAAA,WACE,IAAMW,EAAYC,IAAIC,KAAM,sCAKtBC,GAJkBF,IACtBC,KACA,4CAEYD,IAAIC,KAAM,uCAExB,OACE,kBAAC,IAAD,CAAQE,SAAUF,KAAKG,MAAMD,SAAUE,MAAON,GAC5C,kBAACO,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,MACCL,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNJ,EAAQL,IAAIS,EAAM,sBAAwBA,EAAKC,OAAOC,KAC5D,OACE,yBAAKC,IAAKH,EAAKC,OAAOC,MACpB,wBACEtB,MAAO,CACLwB,aAActB,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEyB,UAAW,QAAUC,GAAIN,EAAKC,OAAOC,MACjDN,IAGL,+BACGI,EAAKO,YAAYC,KADpB,MAESC,YAAkBT,EAAKU,aAEhC,uBACEC,wBAAyB,CAAEC,OAAQZ,EAAKO,YAAYM,eAK5D,kBAAC,EAAD,Q,GApCgB1B,IAAMC,WA4CjB0B,GAFEzB,YAEO","file":"component---src-pages-index-js-74b6c2cd5cf130920de4.js","sourcesContent":["import React from 'react'\n\nimport { rhythm } from '../utils/typography'\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          marginTop: rhythm(2.5),\n          paddingTop: rhythm(1),\n        }}\n      >\n        <a\n          href=\"https://twitter.com/proxyduman\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Twitter\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://github.com/yduman\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GitHub\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://www.linkedin.com/in/yadullah-duman-601594137/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          LinkedIn\n        </a>{' '}\n      </footer>\n    )\n  }\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/layout'\nimport SEO from '../components/SEO'\nimport Footer from '../components/Footer'\nimport { formatReadingTime } from '../utils/helpers'\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    )\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                {node.frontmatter.date}\n                {` â€¢ ${formatReadingTime(node.timeToRead)}`}\n              </small>\n              <p\n                dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\n              />\n            </div>\n          )\n        })}\n        <Footer />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}