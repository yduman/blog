{"data":{"site":{"siteMetadata":{"title":"Yadullah Duman Blog","author":"Yadullah Duman"}},"markdownRemark":{"id":"6553033c-8fa2-5df9-a906-7377b5bfbd72","excerpt":"Let me kidnap you to the world of  MDX-Deck . This project was on my radar for a while and I had the opportunity to test it for a…","html":"<p>Let me kidnap you to the world of <a href=\"https://github.com/jxnblk/mdx-deck\">MDX-Deck</a>. This project was on my radar for a while and I had the opportunity to test it for a presentation I had to make. I was really suprised how fast and easy you can generate good looking slides and how easy it is to integrate interactive elements into your presentation.</p>\n<h1>The World of MDX</h1>\n<p>MDX is a combination of Markdown and JSX.</p>\n<p>Anyone who got their hands dirty with Markdown should actually know that it is super-easy to generate and export documents. I’m writing myself almost everything I can with Markdown (e.g. documentation of projects, notes, summaries for college stuff, etc.).</p>\n<p>And now we add JSX into that Markdown world, but why? The idea was to use the advantages of React components in Markdown. But since you were losing the simplicity of Markdown trying to achieve this goal, <a href=\"https://twitter.com/rauchg?lang=de\">Guillermo Rauch</a> created a <a href=\"https://spectrum.chat/thread/1021be59-2738-4511-aceb-c66921050b9a\">proposal</a> and <code class=\"language-text\">.mdx</code> is born.</p>\n<p>You can read more about MDX <a href=\"https://mdxjs.com/\">here</a>.</p>\n<h1>MDX-Deck</h1>\n<p>So now <a href=\"https://twitter.com/jxnblk?lang=de\">Brent Jackson</a> created this awesome tool called MDX-Deck, in order to create presentations using MDX. Just to quote some features…</p>\n<ul>\n<li><em>Write presentations in markdown</em></li>\n<li><em>Import and use React components</em></li>\n<li><em>Customizable themes and components</em></li>\n<li><em>Zero-config CLI</em></li>\n<li><em>Presenter mode</em></li>\n<li><em>Speaker notes</em></li>\n<li><em>Production Export</em></li>\n<li><em>PDF Export</em></li>\n</ul>\n<h1>Wie kann ich MDX-Deck nutzen?</h1>\n<p>Im Folgenden nutze ich <code class=\"language-text\">yarn</code> statt <code class=\"language-text\">npm</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ mkdir Slides &amp;&amp; cd Slides\n$ yarn init\n$ yarn add mdx-deck --dev\n$ touch deck.mdx</code></pre></div>\n<p>In package.json, den <code class=\"language-text\">start</code> script hinzufügen. Dieser wird einen Server auf <code class=\"language-text\">localhost:8080</code> im watch-mode laufen lassen, d.h. bei jedem Speichern seht ihr eure Änderungen direkt im Browser.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mdx-deck deck.mdx\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">deck.mdx</code> ist unsere Datei, wo wir unsere Präsentation schreiben. Jede Folie wird mit <code class=\"language-text\">---</code> getrennt.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"># My Presentation Title\n\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n\n# About me\n\n### Yadullah Duman\n\n<span class=\"token constant\">I</span> am a working student @ MaibornWolff\n\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n\n<span class=\"token keyword\">import</span> Demo <span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/Demo\"</span>\n\n<span class=\"token operator\">&lt;</span>Demo <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n\n# The End</code></pre></div>\n<p>Wir können hier tatsächlich alle Features von Markdown und React kombinieren!</p>\n<h1>Demonstration einiger Features</h1>\n<p>In der Repository findet ihr unter <a href=\"https://github.com/jxnblk/mdx-deck/tree/master/docs\">docs</a> einiges. Nachfolgend will ich ein paar interessante Features demonstrieren.</p>\n<h2>Themes &#x26; Syntax-Highlighting</h2>\n<p>MDX-Deck hat ein paar built-in <a href=\"https://github.com/jxnblk/mdx-deck/blob/master/docs/themes.md\">Themes</a>. Nachfolgend wollen wir für unsere Codesnippets Syntax-Highlighting ermöglichen, deshalb erstellen wir ein benutzerdefiniertes Theme. Erstellt eine Datei <code class=\"language-text\">theme.js</code> mit bspw. folgendem Inhalt</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>swiss<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"mdx-deck/themes\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> style <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-syntax-highlighter/styles/prism/ghcolors\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-syntax-highlighter/languages/prism/java\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> scala <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-syntax-highlighter/languages/prism/scala\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// extend a default theme</span>\n  <span class=\"token operator\">...</span>swiss<span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// custom font</span>\n  font<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Roboto, sans-serif\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// custom colors</span>\n  colors<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    text<span class=\"token punctuation\">:</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span>\n    background<span class=\"token punctuation\">:</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">,</span>\n    link<span class=\"token punctuation\">:</span> <span class=\"token string\">\"blue\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// syntax highlighting</span>\n  prism<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    style<span class=\"token punctuation\">,</span>\n    languages<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      java<span class=\"token punctuation\">,</span>\n      scala\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Um das benutzerdefinierte Theme zu nutzen, fügt ihr die unten stehende Zeile einfach ganz oben in <code class=\"language-text\">deck.mdx</code> ein.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">as</span> theme <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./theme\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Layouts</h2>\n<p>Neben einigen built-in Layouts wie z.B. <code class=\"language-text\">Invert</code>, <code class=\"language-text\">Split</code>, <code class=\"language-text\">SplitRight</code> und <code class=\"language-text\">FullScreenCode</code>, könnt ihr auch eigene Layout-Komponenten schreiben, die ihr wiederum in euren gewünschten Folien einsetzen könnt.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* MyCustomLayout.js */</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div\n    style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n      width<span class=\"token punctuation\">:</span> <span class=\"token string\">\"100vw\"</span><span class=\"token punctuation\">,</span>\n      height<span class=\"token punctuation\">:</span> <span class=\"token string\">\"100vw\"</span><span class=\"token punctuation\">,</span>\n      backgroundColor<span class=\"token punctuation\">:</span> <span class=\"token string\">\"darkcyan\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In <code class=\"language-text\">deck.mdx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> MyCustomLayout <span class=\"token keyword\">from</span> <span class=\"token string\">\"./MyCustomLayout\"</span>\n\n# No Custom Layout here\n\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> MaibornWolffLayout\n\n# My MaibornWolff Layout here</code></pre></div>\n<h2>Export</h2>\n<p>Es gibt verschiedene Möglichkeiten die Präsentation zu exportieren:</p>\n<p><code class=\"language-text\">package.json</code></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mdx-deck deck.mdx\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"export-static-bundle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mdx-deck build deck.mdx\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"export-pdf\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mdx-deck pdf deck.mdx\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"export-screenshot\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mdx-deck screenshot deck.mdx\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Pro Tipp</h2>\n<p>Mit Hilfe von <a href=\"https://github.com/pomber/code-surfer\">Code Surfer</a> könnt ihr in euren Codeblöcken scrollen, zoomen und relevante Zeilen highlighten ;)</p>\n<h1>Fazit</h1>\n<p>Hier gilt wirklich <strong>probieren über studieren</strong>. Wenn ihr mal schnell Präsentationen erstellen wollt und das ohne den ganzen MS PowerPoint Gedöns, dann kann ich es euch absolut empfehlen. Das Projekt wird mit der Zeit immer populärer und hat mittlerweile 2000 Downloads pro Woche.</p>\n<p>Ein paar Zitate von populären Entwicklern:</p>\n<ul>\n<li>\n<p>Guillermo Rauch (ZEIT)</p>\n<ul>\n<li><em>“mdx-deck puts your deck online, exports to PDF, is version controlled and easy to write and extend. Not many usecases left for Keynote”</em></li>\n</ul>\n</li>\n<li>\n<p>Kent C. Dodds (PayPal)</p>\n<ul>\n<li><em>“Just used mdx-deck by @jxnblk and it’s an absolute delight. I’m planning on using this for everything from now on!”</em></li>\n</ul>\n</li>\n<li>\n<p>Chris Sevilleja (Google)</p>\n<ul>\n<li><em>“Gonna make my next presenation with mdx-deck. Love the amount of control you can get for superpowered transitions/designs”</em></li>\n</ul>\n</li>\n<li>\n<p>Harry Wolff (MongoDB)</p>\n<ul>\n<li><em>“It’s an incredible way to make beautiful presentations with the power of Markdown and JSX.”</em></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Entering the World of MDX-Deck","date":"September 21, 2018"}}},"pageContext":{"slug":"/mdx-deck/","previous":null,"next":null}}