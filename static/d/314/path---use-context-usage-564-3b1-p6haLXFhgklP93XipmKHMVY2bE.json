{"data":{"site":{"siteMetadata":{"title":"Blog of Yadullah Duman","author":"Yadullah Duman"}},"markdownRemark":{"id":"eb39a3e6-deb0-53a9-9a47-65e7a48c9e04","excerpt":"In one of my last posts, I shared the announcement of Hooks by the React team with you. About two weeks ago, the React team finally released…","html":"<p>In one of my last posts, I shared the announcement of Hooks by the React team with you. About two weeks ago, the React team finally released the Hooks API with version 16.8. In this blogpost I want to share one approach of how to use the <code class=\"language-text\">useContext</code> Hook along with <code class=\"language-text\">useReducer</code> to create and update context. I will not explain how the Context or Hooks API work. If you are not familiar with them, then please read the <a href=\"https://reactjs.org/docs/getting-started.html\">documentation</a>.</p>\n<h2>Creating Context</h2>\n<p>Context is a great way to provide “global” data accross your application. It is also a great method to eliminate for example deep Prop-Drilling.</p>\n<p>To create Context, we will create a file <code class=\"language-text\">AppContext.js</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// AppContext.js</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useReducer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> AppContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> initialState <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> count<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"increment\"</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"decrement\"</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> initialState<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>state <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">AppContextProvider</span> <span class=\"token operator\">=</span> props <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":1,"frontmatter":{"title":"How to use Context in React with Hooks","date":"February 15, 2019","spoiler":"One approach of using useContext together with useReducer"},"fields":{"slug":"/useContext-usage/"}}},"pageContext":{"slug":"/useContext-usage/","previous":{"fields":{"slug":"/recap-2018/"},"frontmatter":{"title":"My Recap of 2018"}},"next":null}}